name: CD
run-name: ${{ github.actor }} is running the CD ‚öôÔ∏è
on:
  # Runs this everytime a PR is merged against main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-lint-test-deploy:
    runs-on: ubuntu-latest
    steps:
      # Fetches the GitHub repository files
      - name: Check out repository code
        uses: actions/checkout@v4

      # Authenticates in GCP with the provided user credentials.
      # Provides secure, temporary credentials for GCP.
      # Supports authentication using Service Account Key JSONs (less secure, legacy method).
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Set the default GCP project for subsequent gcloud commands in your environment.
      - name: Configure GCP Project
        run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      # Popular community-maintained action used to set up Flutter in GitHub workflows.
      # Installs Flutter and allows you to run commands like flutter build, flutter test, and flutter analyze within your CI/CD pipeline.
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Format, Lint and Test
        run: |
          dart format --output=none --set-exit-if-changed .
          flutter analyze
          flutter test

      # Configure Docker authentication for interacting with Artifact Registry, allowing you to push or pull Docker images securely.
      # Build the docker image and push top artifact registry.
      - name: Build and Push Docker Image üê≥
        run: |
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker europe-west3-docker.pkg.dev --quiet
          docker build -t europe-west3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REGISTRY }}/flutter_app:v$VERSION .
          docker push europe-west3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REGISTRY }}/flutter_app:v$VERSION

      - name: CD ‚öôÔ∏è
        run: |
          gcloud run deploy {GOOGLE_CLOUD_RUN_SERVICE} \
            --image europe-west3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REGISTRY }}/flutter_app:v$VERSION \
            --region us-central
          # gcloud run deploy {GOOGLE_CLOUD_RUN_SERVICE} \
          #   --image {IMAGE_TAG} \
          #   --region us-central
